// Code generated by goctl. DO NOT EDIT.
// Source: hello.proto

package hello

import (
	"context"

	"go-zero-example/micro/hello/proto/hello"

	"github.com/zeromicro/go-zero/zrpc"
	"google.golang.org/grpc"
)

type (
	HelloRequest  = hello.HelloRequest
	HelloResponse = hello.HelloResponse

	Hello interface {
		Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error)
	}

	defaultHello struct {
		cli zrpc.Client
	}
)

func NewHello(cli zrpc.Client) Hello {
	return &defaultHello{
		cli: cli,
	}
}

func (m *defaultHello) Hello(ctx context.Context, in *HelloRequest, opts ...grpc.CallOption) (*HelloResponse, error) {
	client := hello.NewHelloClient(m.cli.Conn())
	return client.Hello(ctx, in, opts...)
}
